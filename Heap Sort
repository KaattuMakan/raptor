
#include<stdio.h>
#include<stdlib.h>


void read(char A[],int n,FILE *fin,FILE *fout)
{
	for(int i=0;i<n;i++)
	
	{	if(fscanf(fin," %c",&A[i])!=1)

		{
			fprintf(fout,"-999");
			exit(0);
		}
	}

}
 

void display(char A[],int n,FILE *fout)
{
	for(int i=0;i<n;i++)
 		fprintf(fout,"%c ",A[i]);
	fprintf(fout,"\n");
}

void maxheapify(char A[],int i,int size)  //max heap a family line
{
	int l=i;
	if((A[i]<A[2*i+1])&&(2*l+1<size))

		l=2*i+1;
	if((A[2*i+2]>A[l])&&(2*i+2<size))
		l=2*i+2;


	if(l!=i)
	{
		char temp=A[i];
		A[i]=A[l];
		A[l]=temp;
	

		maxheapify(A,l,size);
	}
}


void createmaxheap(char A[],int n)  //for initial use
{
	for(int i=(n-2)/2;i>=0;i--)
		maxheapify(A,i,n);
}

void heapSort(char A[],int n,FILE *fout)
{
	if(n>1)
	{
	createmaxheap(A,n);
	 for(int i=n-1;i>0;i--)
	 {
		 char temp=A[0];
		 A[0]=A[i];
		 A[i]=temp;
		 maxheapify(A,0,i);
	 }}
	 display(A,n,fout);
}



void main()
{
	FILE *fin,*fout;

        fin=fopen("input.txt","r");
	fout=fopen("output.txt","w");

        char c,A[100];
	int n,flag=0;
	float n1;	
	do
	{
		if(fscanf(fin," %c",&c)!=1)
		{
			fprintf(fout,"-999");
			exit(0);
		}

		switch (c)
		{

			case 'r':if(((fscanf(fin,"%f",&n1))!=1)||(n1<=0)||(n1!=(int)n1))
				 {
					 fprintf(fout,"-999");
					 exit(0);
				 }
				 n=(int)n1;
				 
		       	         read(A,n,fin,fout);
				 flag=1;
		                 break; 
			case 's':if(flag==0)
				 {
					 fprintf(fout,"-999");
					 exit(0);
				 }
				 heapSort(A,n,fout);
				 
				 break;
			case 'd':
				 if(flag==0)
				 {
					 fprintf(fout,"-999");
					 exit(0);
				 }
				 int x;
                                 if((fscanf(fin,"%d",&x)!=1)||(x>n))
				 {
					 fprintf(fout,"-999");
					 exit(0);
				 }
                                 
                                 display(A,x,fout);
				 break;
			case 't':break;
			default:fprintf(fout,"-999");
				exit(0);
		}
	}	while(c!='t');
	fclose(fin);
	fclose(fout);
}
